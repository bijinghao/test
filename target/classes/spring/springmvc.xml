<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="controller"/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <bean id="myExceptionResolver" class="exception.MyExceptionResolver"/>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="host" value="192.168.14.130"/>
        <constructor-arg name="port" value="6379"/>
    </bean>

    <bean id="jedisClientPool" class="utils.JedisClientPool">
        <property name="jedisPool" ref="jedisPool"/>
    </bean>
    <!--
      作用一：
         相当于在配置文件中配置最新的处理器映射器和处理器适配器
      作用二：
         当你需要放行一些静态资源的时候，有两种方案
         <mvc:resources mapping="/js/**" location="/js/"/>

         如果不写，处理器无法响应
      作用三：

    -->
    <mvc:annotation-driven/>

    <mvc:default-servlet-handler/>

<!--    <mvc:interceptors>-->
<!--        <mvc:interceptor>-->
<!--            <mvc:mapping path="/**"/>-->
<!--            <mvc:mapping path="/*"/>-->

<!--            <mvc:exclude-mapping path="/show"/>-->
<!--            <mvc:exclude-mapping path="/login"/>-->


<!--            <bean class="interceptor.AfterLoginInteceptor"/>-->
<!--        </mvc:interceptor>-->


<!--    </mvc:interceptors>-->

    <mvc:annotation-driven>
        <!-- 指定http返回编码格式，不然返回ajax请求json会出现中文乱码 -->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                        <value>*/*;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:default-servlet-handler/>


</beans>